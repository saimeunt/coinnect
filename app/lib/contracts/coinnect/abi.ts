const abi = [
  {
    inputs: [
      { internalType: 'string', name: 'uri', type: 'string' },
      { internalType: 'address', name: 'stableCoinAddress', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'ActiveSubscriptionError', type: 'error' },
  { inputs: [], name: 'AlreadyMemberError', type: 'error' },
  { inputs: [], name: 'CreatorAlreadyExistsError', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      { internalType: 'uint256', name: 'balance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'ERC1155InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'approver', type: 'address' }],
    name: 'ERC1155InvalidApprover',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'idsLength', type: 'uint256' },
      { internalType: 'uint256', name: 'valuesLength', type: 'uint256' },
    ],
    name: 'ERC1155InvalidArrayLength',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'operator', type: 'address' }],
    name: 'ERC1155InvalidOperator',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'receiver', type: 'address' }],
    name: 'ERC1155InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
    name: 'ERC1155InvalidSender',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'address', name: 'owner', type: 'address' },
    ],
    name: 'ERC1155MissingApprovalForAll',
    type: 'error',
  },
  { inputs: [], name: 'ExclusivityAlreadyExistsError', type: 'error' },
  { inputs: [], name: 'ExclusivitySoldOutError', type: 'error' },
  { inputs: [], name: 'InvalidAmountError', type: 'error' },
  { inputs: [], name: 'InvalidCreatorAccountError', type: 'error' },
  { inputs: [], name: 'InvalidExclusivityError', type: 'error' },
  { inputs: [], name: 'InvalidSubscriptionDurationError', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'tier', type: 'bytes32' }],
    name: 'InvalidTierError',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'InvalidTokenIdError',
    type: 'error',
  },
  { inputs: [], name: 'InvalidUserAccountError', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'userAddress', type: 'address' }],
    name: 'InvalidUserAddressError',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'NotAMemberError',
    type: 'error',
  },
  { inputs: [], name: 'NotCreatorError', type: 'error' },
  { inputs: [], name: 'NotUserError', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'UserAlreadyExistsError', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'obolId', type: 'uint256' }],
    name: 'CreatorAccountCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'ExclusivityCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: false, internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
      { indexed: false, internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'string', name: 'value', type: 'string' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'URI',
    type: 'event',
  },
  { stateMutability: 'nonpayable', type: 'fallback' },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'accounts', type: 'address[]' },
      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' }],
    name: 'claimRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'string', name: 'bannerUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
          {
            components: [
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'free',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'standard',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'premium',
                type: 'tuple',
              },
            ],
            internalType: 'struct Coinnect.Cards',
            name: 'cards',
            type: 'tuple',
          },
          { internalType: 'uint256', name: 'obolId', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.CreatorAccount',
        name: 'creatorAccount',
        type: 'tuple',
      },
    ],
    name: 'createCreatorAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'string', name: 'imageUrl', type: 'string' },
          { internalType: 'uint256', name: 'price', type: 'uint256' },
          { internalType: 'uint256', name: 'totalSupply', type: 'uint256' },
          { internalType: 'uint256', name: 'minted', type: 'uint256' },
          { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.Exclusivity',
        name: 'exclusivity',
        type: 'tuple',
      },
    ],
    name: 'createExclusivity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
        ],
        internalType: 'struct Coinnect.UserAccount',
        name: 'userAccount',
        type: 'tuple',
      },
    ],
    name: 'createUserAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'creatorAccountSlug', type: 'bytes32' }],
    name: 'creatorAccountBySlug',
    outputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'string', name: 'bannerUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
          {
            components: [
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'free',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'standard',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'premium',
                type: 'tuple',
              },
            ],
            internalType: 'struct Coinnect.Cards',
            name: 'cards',
            type: 'tuple',
          },
          { internalType: 'uint256', name: 'obolId', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.CreatorAccount',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'exclusivityId', type: 'bytes32' }],
    name: 'deleteExclusivity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'donate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'exclusivityId', type: 'bytes32' }],
    name: 'exclusivityById',
    outputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'string', name: 'imageUrl', type: 'string' },
          { internalType: 'uint256', name: 'price', type: 'uint256' },
          { internalType: 'uint256', name: 'totalSupply', type: 'uint256' },
          { internalType: 'uint256', name: 'minted', type: 'uint256' },
          { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.Exclusivity',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32[]', name: 'exclusivityIds', type: 'bytes32[]' }],
    name: 'exclusivityMintedCount',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'globalCounter',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'address', name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
    ],
    name: 'membershipCardByOwnerAndCreatorAccountId',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint8', name: 'color', type: 'uint8' },
          { internalType: 'string', name: 'logoUrl', type: 'string' },
          { internalType: 'bytes32', name: 'tier', type: 'bytes32' },
          { internalType: 'uint256', name: 'memberId', type: 'uint256' },
          { internalType: 'uint256', name: 'mintTimestamp', type: 'uint256' },
          { internalType: 'uint256', name: 'subscriptionEndTimestamp', type: 'uint256' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint256', name: 'obolBalance', type: 'uint256' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
        ],
        internalType: 'struct Coinnect.MembershipCardData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'membershipCardData',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint8', name: 'color', type: 'uint8' },
          { internalType: 'string', name: 'logoUrl', type: 'string' },
          { internalType: 'bytes32', name: 'tier', type: 'bytes32' },
          { internalType: 'uint256', name: 'memberId', type: 'uint256' },
          { internalType: 'uint256', name: 'mintTimestamp', type: 'uint256' },
          { internalType: 'uint256', name: 'subscriptionEndTimestamp', type: 'uint256' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint256', name: 'obolBalance', type: 'uint256' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
        ],
        internalType: 'struct Coinnect.MembershipCardData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'membershipCardsByOwner',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint8', name: 'color', type: 'uint8' },
          { internalType: 'string', name: 'logoUrl', type: 'string' },
          { internalType: 'bytes32', name: 'tier', type: 'bytes32' },
          { internalType: 'uint256', name: 'memberId', type: 'uint256' },
          { internalType: 'uint256', name: 'mintTimestamp', type: 'uint256' },
          { internalType: 'uint256', name: 'subscriptionEndTimestamp', type: 'uint256' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint256', name: 'obolBalance', type: 'uint256' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
        ],
        internalType: 'struct Coinnect.MembershipCardData[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'membershipCardsByTokenId',
    outputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
          { internalType: 'address', name: 'userAddress', type: 'address' },
          { internalType: 'bytes32', name: 'tier', type: 'bytes32' },
          { internalType: 'uint256', name: 'memberId', type: 'uint256' },
          { internalType: 'uint256', name: 'mintTimestamp', type: 'uint256' },
          {
            internalType: 'enum Coinnect.SubscriptionDuration',
            name: 'subscriptionDuration',
            type: 'uint8',
          },
          { internalType: 'uint256', name: 'subscriptionStartTimestamp', type: 'uint256' },
          { internalType: 'uint256', name: 'subscriptionEndTimestamp', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.MembershipCard',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'exclusivityId', type: 'bytes32' }],
    name: 'mintExclusivity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
        ],
        internalType: 'struct Coinnect.UserAccount',
        name: 'userAccount_',
        type: 'tuple',
      },
    ],
    name: 'mintMembershipCard',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'userAddress', type: 'address' }],
    name: 'payoutsAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'userAddress', type: 'address' },
      { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
    ],
    name: 'rewardsAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'creatorAccountId', type: 'bytes32' },
      { internalType: 'bytes32', name: 'tier', type: 'bytes32' },
      {
        internalType: 'enum Coinnect.SubscriptionDuration',
        name: 'subscriptionDuration',
        type: 'uint8',
      },
    ],
    name: 'subscribe',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'slug', type: 'bytes32' },
          { internalType: 'string', name: 'title', type: 'string' },
          { internalType: 'string', name: 'description', type: 'string' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'string', name: 'bannerUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
          {
            components: [
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'free',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'standard',
                type: 'tuple',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'color', type: 'uint8' },
                  { internalType: 'string', name: 'logoUrl', type: 'string' },
                ],
                internalType: 'struct Coinnect.CardTier',
                name: 'premium',
                type: 'tuple',
              },
            ],
            internalType: 'struct Coinnect.Cards',
            name: 'cards',
            type: 'tuple',
          },
          { internalType: 'uint256', name: 'obolId', type: 'uint256' },
        ],
        internalType: 'struct Coinnect.CreatorAccount',
        name: 'creatorAccount',
        type: 'tuple',
      },
    ],
    name: 'updateCreatorAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
        ],
        internalType: 'struct Coinnect.UserAccount',
        name: 'userAccount',
        type: 'tuple',
      },
    ],
    name: 'updateUserAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'uri',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'userAddress', type: 'address' }],
    name: 'userAccountByAddress',
    outputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'id', type: 'bytes32' },
          { internalType: 'bytes32', name: 'username', type: 'bytes32' },
          { internalType: 'string', name: 'avatarUrl', type: 'string' },
          { internalType: 'uint8[]', name: 'interests', type: 'uint8[]' },
        ],
        internalType: 'struct Coinnect.UserAccount',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },
] as const;

export default abi;
